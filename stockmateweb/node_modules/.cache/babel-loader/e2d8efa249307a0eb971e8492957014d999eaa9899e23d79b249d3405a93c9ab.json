{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\StockMate\\\\stockmateweb\\\\src\\\\pages\\\\exchange\\\\ExchangeRateConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExchangeRateConverter.css'; // Optional styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeRateConverter = () => {\n  _s();\n  // State variables for form inputs and API results\n  const [fromCurrency, setFromCurrency] = useState('HUF');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch exchange rate without conversion\n  const fetchRate = async () => {\n    setError(null);\n    setResult(null);\n    try {\n      const response = await fetch(`http://localhost:8080/exchanges/rate?fromCurrency=${fromCurrency}&toCurrency=${toCurrency}`);\n      if (!response.ok) throw new Error('Nem sikerült lekérni az árfolyamot.');\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Convert amount using backend service\n  const convertCurrency = async () => {\n    setError(null);\n    setResult(null);\n    try {\n      const response = await fetch(`http://localhost:8080/exchanges/convertTo?amount=${amount}&fromCurrency=${fromCurrency}&toCurrency=${toCurrency}`);\n      if (!response.ok) throw new Error('Nem sikerült átváltani az összeget.');\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exchange-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valuta \\xE1tv\\xE1lt\\xF3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Forr\\xE1s valuta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fromCurrency,\n        onChange: e => setFromCurrency(e.target.value.toUpperCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"C\\xE9l valuta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: toCurrency,\n        onChange: e => setToCurrency(e.target.value.toUpperCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\xD6sszeg (csak \\xE1tv\\xE1lt\\xE1sn\\xE1l):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exchange-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchRate,\n          children: \"\\xC1rfolyam lek\\xE9r\\xE9se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertCurrency,\n          children: \"\\xC1tv\\xE1lt\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"\\u274C \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exchange-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.originalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \" \", result.fromCurrency, \" =\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.convertedAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", result.toCurrency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xC1rfolyam: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.exchangeRate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ExchangeRateConverter, \"N4jvXSfoYTl6AHYKUJV/u+UBtDE=\");\n_c = ExchangeRateConverter;\nexport default ExchangeRateConverter;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRateConverter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExchangeRateConverter","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","result","setResult","error","setError","fetchRate","response","fetch","ok","Error","data","json","err","message","convertCurrency","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toUpperCase","onClick","originalAmount","convertedAmount","exchangeRate","_c","$RefreshReg$"],"sources":["D:/Programming/Projects/StockMate/stockmateweb/src/pages/exchange/ExchangeRateConverter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ExchangeRateConverter.css'; // Optional styling\r\n\r\nconst ExchangeRateConverter = () => {\r\n  // State variables for form inputs and API results\r\n  const [fromCurrency, setFromCurrency] = useState('HUF');\r\n  const [toCurrency, setToCurrency] = useState('EUR');\r\n  const [amount, setAmount] = useState(1);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch exchange rate without conversion\r\n  const fetchRate = async () => {\r\n    setError(null);\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/exchanges/rate?fromCurrency=${fromCurrency}&toCurrency=${toCurrency}`\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Nem sikerült lekérni az árfolyamot.');\r\n\r\n      const data = await response.json();\r\n      setResult(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Convert amount using backend service\r\n  const convertCurrency = async () => {\r\n    setError(null);\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/exchanges/convertTo?amount=${amount}&fromCurrency=${fromCurrency}&toCurrency=${toCurrency}`\r\n      );\r\n\r\n      if (!response.ok) throw new Error('Nem sikerült átváltani az összeget.');\r\n\r\n      const data = await response.json();\r\n      setResult(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"exchange-container\">\r\n      <h2>Valuta átváltó</h2>\r\n\r\n      <div className=\"exchange-form\">\r\n        {/* Input for source currency */}\r\n        <label>Forrás valuta:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={fromCurrency}\r\n          onChange={(e) => setFromCurrency(e.target.value.toUpperCase())}\r\n        />\r\n\r\n        {/* Input for target currency */}\r\n        <label>Cél valuta:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={toCurrency}\r\n          onChange={(e) => setToCurrency(e.target.value.toUpperCase())}\r\n        />\r\n\r\n        {/* Input for amount to convert */}\r\n        <label>Összeg (csak átváltásnál):</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n        />\r\n\r\n        {/* Action buttons */}\r\n        <div className=\"exchange-buttons\">\r\n          <button onClick={fetchRate}>Árfolyam lekérése</button>\r\n          <button onClick={convertCurrency}>Átváltás</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"error-message\">❌ {error}</p>}\r\n\r\n      {/* Result output */}\r\n      {result && (\r\n        <div className=\"exchange-result\">\r\n          <p>\r\n            <strong>{result.originalAmount}</strong> {result.fromCurrency} ={' '}\r\n            <strong>{result.convertedAmount}</strong> {result.toCurrency}\r\n          </p>\r\n          <p>\r\n            Árfolyam: <strong>{result.exchangeRate}</strong>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExchangeRateConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}